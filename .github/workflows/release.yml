name: release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+
      - v[0-9].[0-9]+.[0-9]+-rc[0-9]+

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            artifact_name: paddler-bin-linux-libc2.35-amd64

          - os: ubuntu-latest
            artifact_name: paddler-bin-linux-libc2.39-amd64

          - os: windows-latest
            artifact_name: paddler-bin-windows-amd64.exe

          - os: macos-latest
            artifact_name: paddler-bin-macos-amd64

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable        

      - name: build the binary
        run: make build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: release-version
        uses: ./.github/workflows/composite/release-tag-to-version
        with:
          release-tag: "${{ github.ref_name }}"

      - name: rename the binary
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp ./target/release/paddler.exe ./${{ matrix.artifact_name }}
          else
            cp ./target/release/paddler ./${{ matrix.artifact_name }}
          fi
        shell: bash

      - uses: ./.github/workflows/composite/assert-version
        with:
          filename: "./${{ matrix.artifact_name }}"
          expected-version: "${{ steps.release-version.outputs.version }}"

      - name: Build and archive binary
        uses: ./.github/workflows/composite/cargo-deb
        with:
          deb: ${{ matrix.artifact_name }}
          os: ${{ matrix.os }}
          before: cargo install cargo-deb

      - name: upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: ./${{ matrix.artifact_name }}*
          file_glob: true
          overwrite: true
          prerelease: ${{ steps.release-version.outputs.type == 'PRE_RELEASE' }}
          tag: ${{ github.ref }}
